{
  "name": "poly-decomp",
  "version": "0.1.0",
  "description": "Convex decomposition in 2D",
  "author": {
    "name": "Stefan Hedman",
    "email": "schteppe@gmail.com",
    "url": "http://steffe.se"
  },
  "keywords": [
    "convex",
    "decomposition",
    "polygon",
    "2d"
  ],
  "engines": {
    "node": "*"
  },
  "main": "./src/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/schteppe/poly-decomp.js.git"
  },
  "bugs": {
    "url": "https://github.com/schteppe/poly-decomp.js/issues"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {},
  "dependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-uglify": "~0.4.0",
    "grunt-browserify": "~2.0.8",
    "browserify": "~3.44.2"
  },
  "readme": "poly-decomp.js\n==============\n\nLibrary for decomposing 2D polygons into convex regions.\n\n[Demo](http://schteppe.github.io/poly-decomp.js/) - [Documentation](http://schteppe.github.io/poly-decomp.js/docs)\n\n### About\n\nThe library is a manual port of the C++ library [Poly Decomp](http://mnbayazit.com/406/overview) by [Mark Bayazit](http://mnbayazit.com/).\n\nIt implements two algorithms, one optimal (but slow) and one less optimal (but fast).\n\n### Usage\n```js\n// Create a concave polygon\nvar concave = new decomp.Polygon();\nconcave.vertices.push([ -1,   1],\n                      [ -1,   0],\n                      [  1,   0],\n                      [  1,   1],\n                      [0.5, 0.5]);\n\n// Decompose into convex polygons, using the faster algorithm\nvar convexes1 = concave.quickDecomp();\n\n// Decompose using the slow (but optimal) algorithm\nvar convexes2 = concave.decomp();\n\n// convexes1 and convexes2 are now arrays of Polygon objects.\n```\n\n### Install\n##### Browser\nDownload [decomp.js](build/decomp.js) and include the script in your HTML:\n```html\n<script src=\"decomp.js\" type=\"text/javascript\"></script>\n```\n##### Node.js\nUntil the code gets somewhat more stable, use the git url to install:\n```\nnpm install git://github.com/schteppe/poly-decomp.js\n```\nOr add the dependency to your ```package.json```:\n```\n    ...\n    \"dependencies\" : {\n        \"poly-decomp\" : \"git://github.com/schteppe/poly-decomp.js\"\n    }\n    ...\n```\nThen require it like so:\n```js\nvar decomp = require('poly-decomp');\n```\n\n### Change log\n##### 0.1\n* Added method ```Polygon.prototype.removeCollinearPoints```.\n* Added optional parameter ```thresholdAngle``` to ```Point.collinear(a,b,c,thresholdAngle)```.\n\n### Contribute\nMake sure you have git, [Node.js](http://nodejs.org), NPM and [grunt](http://gruntjs.com/) installed.\n```\ngit clone https://github.com/schteppe/poly-decomp.js.git; # Clone the repo\ncd poly-decomp.js;\nnpm install;                                     # Install dependencies\n                                                 # (make changes to source)\ngrunt;                                           # Builds build/decomp.js\n```\nThe most recent commits are currently pushed to the ```master``` branch. Thanks for contributing!\n",
  "readmeFilename": "README.md",
  "_id": "poly-decomp@0.1.0",
  "dist": {
    "shasum": "19947610b2effa862c392092c3bad777c6c22199"
  },
  "_from": "poly-decomp@0.1.0",
  "_resolved": "https://registry.npmjs.org/poly-decomp/-/poly-decomp-0.1.0.tgz"
}
